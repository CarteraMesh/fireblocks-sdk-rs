// Fireblocks API
//
// Fireblocks provides a suite of applications to manage digital asset operations and a complete development platform to build your business on the blockchain.  - Visit our website for more information: [Fireblocks Website](https://fireblocks.com) - Visit our developer docs: [Fireblocks DevPortal](https://developers.fireblocks.com)
//
// The version of the OpenAPI document: 1.8.0
// Contact: developers@fireblocks.com
// Generated by: https://openapi-generator.tech

use {
    crate::models,
    serde::{Deserialize, Serialize},
};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ExternalWalletAsset {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<models::ConfigChangeRequestStatus>,
    #[serde(rename = "address", skip_serializing_if = "Option::is_none")]
    pub address: Option<String>,
    #[serde(skip)]
    pub balance: Option<String>,
    #[serde(skip)]
    pub locked_amount: Option<String>,
    #[serde(rename = "tag", skip_serializing_if = "Option::is_none")]
    pub tag: Option<String>,
    #[serde(rename = "activationTime", skip_serializing_if = "Option::is_none")]
    pub activation_time: Option<String>,
    #[serde(rename = "additionalInfo", skip_serializing_if = "Option::is_none")]
    pub additional_info: Option<Vec<models::WalletAssetAdditionalInfo>>,
}

impl ExternalWalletAsset {
    pub fn new() -> ExternalWalletAsset {
        ExternalWalletAsset {
            id: None,
            status: None,
            address: None,
            balance: None,
            locked_amount: None,
            tag: None,
            activation_time: None,
            additional_info: None,
        }
    }
}
