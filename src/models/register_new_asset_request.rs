/*
 * Fireblocks API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.5
 * Contact: support@fireblocks.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RegisterNewAssetRequest {
    /// Native asset ID of the blockchain
    #[serde(rename = "blockchainId")]
    pub blockchain_id: String,
    /// Asset address. - EVM-based chains: token contract address - Stellar (XLM): issuer address - Algorand (ALGO): asset ID - TRON (TRX): token contract address - NEAR: token address - Solana: token's mint account address 
    #[serde(rename = "address")]
    pub address: String,
    /// Required for Stellar only, asset code is expected.
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
}

impl RegisterNewAssetRequest {
    pub fn new(blockchain_id: String, address: String) -> RegisterNewAssetRequest {
        RegisterNewAssetRequest {
            blockchain_id,
            address,
            symbol: None,
        }
    }
}

