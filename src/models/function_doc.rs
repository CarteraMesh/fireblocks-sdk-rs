/*
 * Fireblocks API
 *
 * Fireblocks provides a suite of applications to manage digital asset operations and a complete development platform to build your business on the blockchain.  - Visit our website for more information: [Fireblocks Website](https://fireblocks.com) - Visit our developer docs: [Fireblocks DevPortal](https://developers.fireblocks.com) 
 *
 * The version of the OpenAPI document: 1.8.0
 * Contact: developers@fireblocks.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FunctionDoc {
    /// A description of the function
    #[serde(rename = "details", skip_serializing_if = "Option::is_none")]
    pub details: Option<String>,
    /// A description of the function parameters
    #[serde(rename = "params", skip_serializing_if = "Option::is_none")]
    pub params: Option<std::collections::HashMap<String, String>>,
    /// A description of the function return values. only for read functions
    #[serde(rename = "returns", skip_serializing_if = "Option::is_none")]
    pub returns: Option<std::collections::HashMap<String, String>>,
}

impl FunctionDoc {
    pub fn new() -> FunctionDoc {
        FunctionDoc {
            details: None,
            params: None,
            returns: None,
        }
    }
}

