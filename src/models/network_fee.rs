/*
 * Fireblocks API
 *
 * Fireblocks provides a suite of applications to manage digital asset operations and a complete development platform to build your business on the blockchain.  - Visit our website for more information: [Fireblocks Website](https://fireblocks.com) - Visit our developer docs: [Fireblocks DevPortal](https://developers.fireblocks.com) 
 *
 * The version of the OpenAPI document: 1.8.0
 * Contact: developers@fireblocks.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NetworkFee {
    /// The fee per byte value for UTXO based assets
    #[serde(rename = "feePerByte", skip_serializing_if = "Option::is_none")]
    pub fee_per_byte: Option<String>,
    /// Gas price in gwei units for EVM based networks
    #[serde(rename = "gasPrice", skip_serializing_if = "Option::is_none")]
    pub gas_price: Option<String>,
    /// The full network fee for non EVM and UTXO based assets (in the base asset units)
    #[serde(rename = "networkFee", skip_serializing_if = "Option::is_none")]
    pub network_fee: Option<String>,
    /// (optional) Base Fee according to EIP-1559 (ETH assets)
    #[serde(rename = "baseFee", skip_serializing_if = "Option::is_none")]
    pub base_fee: Option<String>,
    /// (optional) Priority Fee according to EIP-1559 (ETH assets)
    #[serde(rename = "priorityFee", skip_serializing_if = "Option::is_none")]
    pub priority_fee: Option<String>,
}

impl NetworkFee {
    pub fn new() -> NetworkFee {
        NetworkFee {
            fee_per_byte: None,
            gas_price: None,
            network_fee: None,
            base_fee: None,
            priority_fee: None,
        }
    }
}

