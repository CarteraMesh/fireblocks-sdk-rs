/*
 * Fireblocks API
 *
 * Fireblocks provides a suite of applications to manage digital asset operations and a complete development platform to build your business on the blockchain.  - Visit our website for more information: [Fireblocks Website](https://fireblocks.com) - Visit our developer docs: [Fireblocks DevPortal](https://developers.fireblocks.com) 
 *
 * The version of the OpenAPI document: 1.8.0
 * Contact: developers@fireblocks.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AddAssetToExternalWalletRequestOneOf {
    /// The wallet's address (or xpub) of the wallet
    #[serde(rename = "address")]
    pub address: String,
    /// For XRP wallets, the destination tag; for EOS/XLM, the memo; for the fiat providers (BLINC by BCB Group), the Bank Transfer Description
    #[serde(rename = "tag", skip_serializing_if = "Option::is_none")]
    pub tag: Option<String>,
}

impl AddAssetToExternalWalletRequestOneOf {
    pub fn new(address: String) -> AddAssetToExternalWalletRequestOneOf {
        AddAssetToExternalWalletRequestOneOf {
            address,
            tag: None,
        }
    }
}

