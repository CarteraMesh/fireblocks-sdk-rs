// Fireblocks API
//
// Fireblocks provides a suite of applications to manage digital asset operations and a complete development platform to build your business on the blockchain.  - Visit our website for more information: [Fireblocks Website](https://fireblocks.com) - Visit our developer docs: [Fireblocks DevPortal](https://developers.fireblocks.com)
//
// The version of the OpenAPI document: 1.8.0
// Contact: developers@fireblocks.com
// Generated by: https://openapi-generator.tech

use {
    crate::models,
    serde::{Deserialize, Serialize},
};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TravelRuleVasp {
    #[serde(rename = "did")]
    pub did: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "verificationStatus")]
    pub verification_status: String,
    #[serde(rename = "addressLine1")]
    pub address_line1: String,
    #[serde(rename = "addressLine2")]
    pub address_line2: String,
    #[serde(rename = "city")]
    pub city: String,
    #[serde(rename = "country")]
    pub country: String,
    #[serde(rename = "emailDomains")]
    pub email_domains: String,
    #[serde(rename = "website")]
    pub website: String,
    #[serde(rename = "logo")]
    pub logo: String,
    #[serde(rename = "legalStructure")]
    pub legal_structure: String,
    #[serde(rename = "legalName")]
    pub legal_name: String,
    #[serde(rename = "yearFounded")]
    pub year_founded: String,
    #[serde(rename = "incorporationCountry")]
    pub incorporation_country: String,
    #[serde(rename = "isRegulated")]
    pub is_regulated: String,
    #[serde(rename = "otherNames")]
    pub other_names: String,
    #[serde(rename = "identificationType")]
    pub identification_type: String,
    #[serde(rename = "identificationCountry")]
    pub identification_country: String,
    #[serde(rename = "businessNumber")]
    pub business_number: String,
    #[serde(rename = "regulatoryAuthorities")]
    pub regulatory_authorities: String,
    #[serde(rename = "jurisdictions")]
    pub jurisdictions: String,
    #[serde(rename = "street")]
    pub street: String,
    #[serde(rename = "number")]
    pub number: String,
    #[serde(rename = "unit")]
    pub unit: String,
    #[serde(rename = "postCode")]
    pub post_code: String,
    #[serde(rename = "state")]
    pub state: String,
    #[serde(rename = "certificates")]
    pub certificates: String,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "travelRule_OPENVASP")]
    pub travel_rule_openvasp: String,
    #[serde(rename = "travelRule_SYGNA")]
    pub travel_rule_sygna: String,
    #[serde(rename = "travelRule_TRISA")]
    pub travel_rule_trisa: String,
    #[serde(rename = "travelRule_TRLIGHT")]
    pub travel_rule_trlight: String,
    #[serde(rename = "travelRule_EMAIL")]
    pub travel_rule_email: String,
    #[serde(rename = "travelRule_TRP")]
    pub travel_rule_trp: String,
    #[serde(rename = "travelRule_SHYFT")]
    pub travel_rule_shyft: String,
    #[serde(rename = "travelRule_USTRAVELRULEWG")]
    pub travel_rule_ustravelrulewg: String,
    #[serde(rename = "createdAt")]
    pub created_at: String,
    #[serde(rename = "createdBy")]
    pub created_by: String,
    #[serde(rename = "updatedAt")]
    pub updated_at: String,
    #[serde(rename = "updatedBy")]
    pub updated_by: String,
    #[serde(rename = "lastSentDate")]
    pub last_sent_date: String,
    #[serde(rename = "lastReceivedDate")]
    pub last_received_date: String,
    #[serde(rename = "documents")]
    pub documents: String,
    #[serde(rename = "hasAdmin")]
    pub has_admin: bool,
    #[serde(rename = "isNotifiable")]
    pub is_notifiable: bool,
    #[serde(rename = "issuers")]
    pub issuers: models::TravelRuleIssuers,
}

impl TravelRuleVasp {
    pub fn new(
        did: String,
        name: String,
        verification_status: String,
        address_line1: String,
        address_line2: String,
        city: String,
        country: String,
        email_domains: String,
        website: String,
        logo: String,
        legal_structure: String,
        legal_name: String,
        year_founded: String,
        incorporation_country: String,
        is_regulated: String,
        other_names: String,
        identification_type: String,
        identification_country: String,
        business_number: String,
        regulatory_authorities: String,
        jurisdictions: String,
        street: String,
        number: String,
        unit: String,
        post_code: String,
        state: String,
        certificates: String,
        description: String,
        travel_rule_openvasp: String,
        travel_rule_sygna: String,
        travel_rule_trisa: String,
        travel_rule_trlight: String,
        travel_rule_email: String,
        travel_rule_trp: String,
        travel_rule_shyft: String,
        travel_rule_ustravelrulewg: String,
        created_at: String,
        created_by: String,
        updated_at: String,
        updated_by: String,
        last_sent_date: String,
        last_received_date: String,
        documents: String,
        has_admin: bool,
        is_notifiable: bool,
        issuers: models::TravelRuleIssuers,
    ) -> TravelRuleVasp {
        TravelRuleVasp {
            did,
            name,
            verification_status,
            address_line1,
            address_line2,
            city,
            country,
            email_domains,
            website,
            logo,
            legal_structure,
            legal_name,
            year_founded,
            incorporation_country,
            is_regulated,
            other_names,
            identification_type,
            identification_country,
            business_number,
            regulatory_authorities,
            jurisdictions,
            street,
            number,
            unit,
            post_code,
            state,
            certificates,
            description,
            travel_rule_openvasp,
            travel_rule_sygna,
            travel_rule_trisa,
            travel_rule_trlight,
            travel_rule_email,
            travel_rule_trp,
            travel_rule_shyft,
            travel_rule_ustravelrulewg,
            created_at,
            created_by,
            updated_at,
            updated_by,
            last_sent_date,
            last_received_date,
            documents,
            has_admin,
            is_notifiable,
            issuers,
        }
    }
}
