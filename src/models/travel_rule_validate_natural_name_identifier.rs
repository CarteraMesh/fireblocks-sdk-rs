// Fireblocks API
//
// Fireblocks provides a suite of applications to manage digital asset operations and a complete development platform to build your business on the blockchain.  - Visit our website for more information: [Fireblocks Website](https://fireblocks.com) - Visit our developer docs: [Fireblocks DevPortal](https://developers.fireblocks.com)
//
// The version of the OpenAPI document: 1.8.0
// Contact: developers@fireblocks.com
// Generated by: https://openapi-generator.tech

use {
    crate::models,
    serde::{Deserialize, Serialize},
};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TravelRuleValidateNaturalNameIdentifier {
    /// The primary identifier of the name
    #[serde(rename = "primaryIdentifier", skip_serializing_if = "Option::is_none")]
    pub primary_identifier: Option<String>,
    /// The secondary identifier of the name
    #[serde(
        rename = "secondaryIdentifier",
        skip_serializing_if = "Option::is_none"
    )]
    pub secondary_identifier: Option<String>,
    /// Specifies the type of name for a natural person. Acceptable values are:
    /// - 'ALIA': Alias name, a name other than the legal name by which a
    /// natural person is also known. - 'BIRT': Name at birth, the name given to
    /// a natural person at birth. - 'MAID': Maiden name, the original name of a
    /// natural person who has changed their name after marriage. - 'LEGL':
    /// Legal name, the name that identifies a natural person for legal,
    /// official, or administrative purposes. - 'MISC': Unspecified, a name by
    /// which a natural person may be known but cannot otherwise be categorized.
    #[serde(rename = "nameIdentifierType", skip_serializing_if = "Option::is_none")]
    pub name_identifier_type: Option<NameIdentifierType>,
}

impl TravelRuleValidateNaturalNameIdentifier {
    pub fn new() -> TravelRuleValidateNaturalNameIdentifier {
        TravelRuleValidateNaturalNameIdentifier {
            primary_identifier: None,
            secondary_identifier: None,
            name_identifier_type: None,
        }
    }
}
/// Specifies the type of name for a natural person. Acceptable values are: -
/// 'ALIA': Alias name, a name other than the legal name by which a natural
/// person is also known. - 'BIRT': Name at birth, the name given to a natural
/// person at birth. - 'MAID': Maiden name, the original name of a natural
/// person who has changed their name after marriage. - 'LEGL': Legal name, the
/// name that identifies a natural person for legal, official, or administrative
/// purposes. - 'MISC': Unspecified, a name by which a natural person may be
/// known but cannot otherwise be categorized.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum NameIdentifierType {
    #[serde(rename = "ALIA")]
    Alia,
    #[serde(rename = "BIRT")]
    Birt,
    #[serde(rename = "MAID")]
    Maid,
    #[serde(rename = "LEGL")]
    Legl,
    #[serde(rename = "MISC")]
    Misc,
}

impl Default for NameIdentifierType {
    fn default() -> NameIdentifierType {
        Self::Alia
    }
}
