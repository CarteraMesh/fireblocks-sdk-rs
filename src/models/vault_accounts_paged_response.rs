/*
 * Fireblocks API
 *
 * Fireblocks provides a suite of applications to manage digital asset operations and a complete development platform to build your business on the blockchain.  - Visit our website for more information: [Fireblocks Website](https://fireblocks.com) - Visit our developer docs: [Fireblocks DevPortal](https://developers.fireblocks.com) 
 *
 * The version of the OpenAPI document: 1.8.0
 * Contact: developers@fireblocks.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct VaultAccountsPagedResponse {
    #[serde(rename = "accounts", skip_serializing_if = "Option::is_none")]
    pub accounts: Option<Vec<models::VaultAccount>>,
    #[serde(rename = "paging", skip_serializing_if = "Option::is_none")]
    pub paging: Option<models::VaultAccountsPagedResponsePaging>,
    #[serde(rename = "previousUrl", skip_serializing_if = "Option::is_none")]
    pub previous_url: Option<String>,
    #[serde(rename = "nextUrl", skip_serializing_if = "Option::is_none")]
    pub next_url: Option<String>,
}

impl VaultAccountsPagedResponse {
    pub fn new() -> VaultAccountsPagedResponse {
        VaultAccountsPagedResponse {
            accounts: None,
            paging: None,
            previous_url: None,
            next_url: None,
        }
    }
}

