// Fireblocks API
//
// Fireblocks provides a suite of applications to manage digital asset operations and a complete development platform to build your business on the blockchain.  - Visit our website for more information: [Fireblocks Website](https://fireblocks.com) - Visit our developer docs: [Fireblocks DevPortal](https://developers.fireblocks.com)
//
// The version of the OpenAPI document: 1.8.0
// Contact: developers@fireblocks.com
// Generated by: https://openapi-generator.tech

use {
    crate::models,
    serde::{Deserialize, Serialize},
};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TravelRuleLegalPersonNameIdentifier {
    /// Name by which the legal person is known. The value must be encrypted.
    #[serde(rename = "legalPersonName", skip_serializing_if = "Option::is_none")]
    pub legal_person_name: Option<String>,
    /// Specifies the type of name for a legal person. Acceptable values are: -
    /// 'REGISTERED': The official registered name. - 'TRADE': A trading name or
    /// DBA (Doing Business As) name. - 'OTHER': Any other type of name. The
    /// value must be encrypted.
    #[serde(
        rename = "legalPersonNameIdentifierType",
        skip_serializing_if = "Option::is_none"
    )]
    pub legal_person_name_identifier_type: Option<String>,
}

impl TravelRuleLegalPersonNameIdentifier {
    pub fn new() -> TravelRuleLegalPersonNameIdentifier {
        TravelRuleLegalPersonNameIdentifier {
            legal_person_name: None,
            legal_person_name_identifier_type: None,
        }
    }
}
