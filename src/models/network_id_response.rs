/*
 * Fireblocks API
 *
 * Fireblocks provides a suite of applications to manage digital asset operations and a complete development platform to build your business on the blockchain.  - Visit our website for more information: [Fireblocks Website](https://fireblocks.com) - Visit our developer docs: [Fireblocks DevPortal](https://developers.fireblocks.com) 
 *
 * The version of the OpenAPI document: 1.8.0
 * Contact: developers@fireblocks.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NetworkIdResponse {
    /// Network Connection ID
    #[serde(rename = "id")]
    pub id: String,
    /// Network Connection Name
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "routingPolicy", skip_serializing_if = "Option::is_none")]
    pub routing_policy: Option<std::collections::HashMap<String, models::NetworkIdRoutingPolicyValue>>,
    /// The specific network is discoverable.
    #[serde(rename = "isDiscoverable", skip_serializing_if = "Option::is_none")]
    pub is_discoverable: Option<bool>,
}

impl NetworkIdResponse {
    pub fn new(id: String, name: String) -> NetworkIdResponse {
        NetworkIdResponse {
            id,
            name,
            routing_policy: None,
            is_discoverable: None,
        }
    }
}

