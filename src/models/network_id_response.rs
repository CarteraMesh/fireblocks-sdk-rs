/*
 * Fireblocks API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.5
 * Contact: support@fireblocks.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NetworkIdResponse {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "routingPolicy", skip_serializing_if = "Option::is_none")]
    pub routing_policy: Option<models::NetworkIdRoutingPolicy>,
    /// The specific network is discoverable.
    #[serde(rename = "isDiscoverable", skip_serializing_if = "Option::is_none")]
    pub is_discoverable: Option<bool>,
}

impl NetworkIdResponse {
    pub fn new(id: String, name: String) -> NetworkIdResponse {
        NetworkIdResponse {
            id,
            name,
            routing_policy: None,
            is_discoverable: None,
        }
    }
}

