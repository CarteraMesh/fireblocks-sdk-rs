// Fireblocks API
//
// Fireblocks provides a suite of applications to manage digital asset operations and a complete development platform to build your business on the blockchain.  - Visit our website for more information: [Fireblocks Website](https://fireblocks.com) - Visit our developer docs: [Fireblocks DevPortal](https://developers.fireblocks.com)
//
// The version of the OpenAPI document: 1.8.0
// Contact: developers@fireblocks.com
// Generated by: https://openapi-generator.tech

use {
    crate::models,
    serde::{Deserialize, Serialize},
};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SwapRequiredAction {
    #[serde(rename = "type")]
    pub r#type: models::SwapRequiredActionsEnum,
    /// The status of the required action
    #[serde(rename = "status")]
    pub status: Status,
    /// The transaction id of the required action
    #[serde(rename = "txId", skip_serializing_if = "Option::is_none")]
    pub tx_id: Option<String>,
}

impl SwapRequiredAction {
    pub fn new(r#type: models::SwapRequiredActionsEnum, status: Status) -> SwapRequiredAction {
        SwapRequiredAction {
            r#type,
            status,
            tx_id: None,
        }
    }
}
/// The status of the required action
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "WAITING")]
    Waiting,
    #[serde(rename = "PROCESSING")]
    Processing,
    #[serde(rename = "COMPLETED")]
    Completed,
    #[serde(rename = "FAILED")]
    Failed,
    #[serde(rename = "CANCELED")]
    Canceled,
}

impl Default for Status {
    fn default() -> Status {
        Self::Waiting
    }
}
