/*
 * Fireblocks API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.5
 * Contact: support@fireblocks.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Term {
    #[serde(rename = "networkConnectionId", skip_serializing_if = "Option::is_none")]
    pub network_connection_id: Option<String>,
    #[serde(rename = "outgoing", skip_serializing_if = "Option::is_none")]
    pub outgoing: Option<bool>,
    #[serde(rename = "asset", skip_serializing_if = "Option::is_none")]
    pub asset: Option<String>,
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<String>,
    #[serde(rename = "note", skip_serializing_if = "Option::is_none")]
    pub note: Option<String>,
    #[serde(rename = "operation", skip_serializing_if = "Option::is_none")]
    pub operation: Option<String>,
}

impl Term {
    pub fn new() -> Term {
        Term {
            network_connection_id: None,
            outgoing: None,
            asset: None,
            amount: None,
            note: None,
            operation: None,
        }
    }
}

