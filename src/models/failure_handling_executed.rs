/*
 * Fireblocks API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.5
 * Contact: support@fireblocks.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FailureHandlingExecuted {
    /// Flag to enable/disable failure handling
    #[serde(rename = "enabled")]
    pub enabled: bool,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<models::FailureHandlingType>,
    #[serde(rename = "execution", skip_serializing_if = "Option::is_none")]
    pub execution: Option<models::FailureHandlingExecutedAllOfExecution>,
}

impl FailureHandlingExecuted {
    pub fn new(enabled: bool) -> FailureHandlingExecuted {
        FailureHandlingExecuted {
            enabled,
            r#type: None,
            execution: None,
        }
    }
}

