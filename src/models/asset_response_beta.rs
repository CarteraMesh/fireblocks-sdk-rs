// Fireblocks API
//
// Fireblocks provides a suite of applications to manage digital asset operations and a complete development platform to build your business on the blockchain.  - Visit our website for more information: [Fireblocks Website](https://fireblocks.com) - Visit our developer docs: [Fireblocks DevPortal](https://developers.fireblocks.com)
//
// The version of the OpenAPI document: 1.8.0
// Contact: developers@fireblocks.com
// Generated by: https://openapi-generator.tech

use {
    crate::models,
    serde::{Deserialize, Serialize},
};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AssetResponseBeta {
    /// The ID of the asset
    #[serde(rename = "id")]
    pub id: String,
    /// The Legacy ID of the asset
    #[serde(rename = "legacyId")]
    pub legacy_id: String,
    /// The ID of the asset's blockchain
    #[serde(rename = "blockchainId", skip_serializing_if = "Option::is_none")]
    pub blockchain_id: Option<String>,
    /// Asset's display name
    #[serde(rename = "displayName", skip_serializing_if = "Option::is_none")]
    pub display_name: Option<String>,
    /// Asset's display symbol
    #[serde(rename = "displaySymbol", skip_serializing_if = "Option::is_none")]
    pub display_symbol: Option<String>,
    #[serde(rename = "assetClass")]
    pub asset_class: models::AssetClassBeta,
    #[serde(rename = "onchain", skip_serializing_if = "Option::is_none")]
    pub onchain: Option<models::AssetOnchainBeta>,
    #[serde(rename = "metadata")]
    pub metadata: models::AssetMetadataBeta,
}

impl AssetResponseBeta {
    pub fn new(
        id: String,
        legacy_id: String,
        asset_class: models::AssetClassBeta,
        metadata: models::AssetMetadataBeta,
    ) -> AssetResponseBeta {
        AssetResponseBeta {
            id,
            legacy_id,
            blockchain_id: None,
            display_name: None,
            display_symbol: None,
            asset_class,
            onchain: None,
            metadata,
        }
    }
}
