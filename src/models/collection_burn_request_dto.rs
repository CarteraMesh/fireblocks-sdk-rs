/*
 * Fireblocks API
 *
 * Fireblocks provides a suite of applications to manage digital asset operations and a complete development platform to build your business on the blockchain.  - Visit our website for more information: [Fireblocks Website](https://fireblocks.com) - Visit our developer docs: [Fireblocks DevPortal](https://developers.fireblocks.com) 
 *
 * The version of the OpenAPI document: 1.8.0
 * Contact: developers@fireblocks.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CollectionBurnRequestDto {
    /// The id of the vault account that initiates the burn function
    #[serde(rename = "vaultAccountId")]
    pub vault_account_id: String,
    /// The token id
    #[serde(rename = "tokenId")]
    pub token_id: String,
    /// For ERC721, amount is optional or should always be 1 and for ERC1155, amount should be 1 or greater
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<String>,
}

impl CollectionBurnRequestDto {
    pub fn new(vault_account_id: String, token_id: String) -> CollectionBurnRequestDto {
        CollectionBurnRequestDto {
            vault_account_id,
            token_id,
            amount: None,
        }
    }
}

