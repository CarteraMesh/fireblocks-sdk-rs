// Fireblocks API
//
// Fireblocks provides a suite of applications to manage digital asset operations and a complete development platform to build your business on the blockchain.  - Visit our website for more information: [Fireblocks Website](https://fireblocks.com) - Visit our developer docs: [Fireblocks DevPortal](https://developers.fireblocks.com)
//
// The version of the OpenAPI document: 1.8.0
// Contact: developers@fireblocks.com
// Generated by: https://openapi-generator.tech

use {
    crate::models,
    serde::{Deserialize, Serialize},
};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AddCosignerResponse {
    /// The id of the API key to be paired with the cosigner
    #[serde(rename = "apiKeyId")]
    pub api_key_id: uuid::Uuid,
    /// The name of the cosigner
    #[serde(rename = "name")]
    pub name: String,
    /// Whether the cosigner already exists in another workspace
    #[serde(rename = "existingCosigner", skip_serializing_if = "Option::is_none")]
    pub existing_cosigner: Option<bool>,
    /// The unique identifier of a pending cosigner
    #[serde(rename = "pendingCosignerId")]
    pub pending_cosigner_id: uuid::Uuid,
}

impl AddCosignerResponse {
    pub fn new(
        api_key_id: uuid::Uuid,
        name: String,
        pending_cosigner_id: uuid::Uuid,
    ) -> AddCosignerResponse {
        AddCosignerResponse {
            api_key_id,
            name,
            existing_cosigner: None,
            pending_cosigner_id,
        }
    }
}
