/*
 * Fireblocks API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.5
 * Contact: support@fireblocks.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SmartTransferSetTicketExpirationDto {
    /// Sets ticket expiration time (in hours) after a ticket is submitted. If no funding source is set to any term, the ticket will automatically expire after given time.
    #[serde(rename = "expiresIn")]
    pub expires_in: f64,
}

impl SmartTransferSetTicketExpirationDto {
    pub fn new(expires_in: f64) -> SmartTransferSetTicketExpirationDto {
        SmartTransferSetTicketExpirationDto {
            expires_in,
        }
    }
}

