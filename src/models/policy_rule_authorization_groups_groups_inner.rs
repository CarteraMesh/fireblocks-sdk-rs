/*
 * Fireblocks API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.5
 * Contact: support@fireblocks.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PolicyRuleAuthorizationGroupsGroupsInner {
    /// User ids
    #[serde(rename = "users", skip_serializing_if = "Option::is_none")]
    pub users: Option<Vec<String>>,
    /// Group ids
    #[serde(rename = "usersGroups", skip_serializing_if = "Option::is_none")]
    pub users_groups: Option<Vec<String>>,
    /// Represents the min amount of entities which are required to approve the transaction, default is 1.
    #[serde(rename = "th", skip_serializing_if = "Option::is_none")]
    pub th: Option<f64>,
}

impl PolicyRuleAuthorizationGroupsGroupsInner {
    pub fn new() -> PolicyRuleAuthorizationGroupsGroupsInner {
        PolicyRuleAuthorizationGroupsGroupsInner {
            users: None,
            users_groups: None,
            th: None,
        }
    }
}

