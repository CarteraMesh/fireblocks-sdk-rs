/*
 * Fireblocks API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.5
 * Contact: support@fireblocks.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AssetResponseMetadata {
    /// The scope of the asset
    #[serde(rename = "scope")]
    pub scope: Scope,
    /// Is asset deprecated
    #[serde(rename = "deprecated")]
    pub deprecated: bool,
}

impl AssetResponseMetadata {
    pub fn new(scope: Scope, deprecated: bool) -> AssetResponseMetadata {
        AssetResponseMetadata {
            scope,
            deprecated,
        }
    }
}
/// The scope of the asset
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Scope {
    #[serde(rename = "Global")]
    Global,
    #[serde(rename = "Local")]
    Local,
}

impl Default for Scope {
    fn default() -> Scope {
        Self::Global
    }
}

