/*
 * Fireblocks API
 *
 * Fireblocks provides a suite of applications to manage digital asset operations and a complete development platform to build your business on the blockchain.  - Visit our website for more information: [Fireblocks Website](https://fireblocks.com) - Visit our developer docs: [Fireblocks DevPortal](https://developers.fireblocks.com) 
 *
 * The version of the OpenAPI document: 1.8.0
 * Contact: developers@fireblocks.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateTokenRequestDto {
    /// The base asset identifier of the blockchain you want to deploy to
    #[serde(rename = "assetId", skip_serializing_if = "Option::is_none")]
    pub asset_id: Option<String>,
    /// The id of the vault account that initiated the request to issue the token
    #[serde(rename = "vaultAccountId")]
    pub vault_account_id: String,
    #[serde(rename = "createParams")]
    pub create_params: models::CreateTokenRequestDtoCreateParams,
    #[serde(rename = "displayName", skip_serializing_if = "Option::is_none")]
    pub display_name: Option<String>,
}

impl CreateTokenRequestDto {
    pub fn new(vault_account_id: String, create_params: models::CreateTokenRequestDtoCreateParams) -> CreateTokenRequestDto {
        CreateTokenRequestDto {
            asset_id: None,
            vault_account_id,
            create_params,
            display_name: None,
        }
    }
}

