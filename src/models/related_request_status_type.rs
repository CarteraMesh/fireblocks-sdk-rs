// Fireblocks API
//
// Fireblocks provides a suite of applications to manage digital asset operations and a complete development platform to build your business on the blockchain.  - Visit our website for more information: [Fireblocks Website](https://fireblocks.com) - Visit our developer docs: [Fireblocks DevPortal](https://developers.fireblocks.com)
//
// The version of the OpenAPI document: 1.8.0
// Contact: developers@fireblocks.com
// Generated by: https://openapi-generator.tech

use serde::{Deserialize, Serialize};

/// RelatedRequestStatusType : The status of the request
/// The status of the request
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RelatedRequestStatusType {
    #[serde(rename = "error")]
    Error,
    #[serde(rename = "created")]
    Created,
    #[serde(rename = "canceled")]
    Canceled,
    #[serde(rename = "activate_requested")]
    ActivateRequested,
    #[serde(rename = "approve_inprogress")]
    ApproveInprogress,
    #[serde(rename = "approve_inprogress_signed")]
    ApproveInprogressSigned,
    #[serde(rename = "activate_inprogress")]
    ActivateInprogress,
    #[serde(rename = "activate_inprogress_signed")]
    ActivateInprogressSigned,
    #[serde(rename = "activate_inprogress_confirmed")]
    ActivateInprogressConfirmed,
    #[serde(rename = "activate_done")]
    ActivateDone,
    #[serde(rename = "deactivate_requested")]
    DeactivateRequested,
    #[serde(rename = "deactivate_inprogress")]
    DeactivateInprogress,
    #[serde(rename = "deactivate_inprogress_signed")]
    DeactivateInprogressSigned,
    #[serde(rename = "deactivate_inprogress_confirmed")]
    DeactivateInprogressConfirmed,
    #[serde(rename = "deactivate_done")]
    DeactivateDone,
    #[serde(rename = "withdraw_inprogress")]
    WithdrawInprogress,
    #[serde(rename = "withdraw_requested")]
    WithdrawRequested,
    #[serde(rename = "withdraw_inprogress_confirmed")]
    WithdrawInprogressConfirmed,
    #[serde(rename = "withdraw_done")]
    WithdrawDone,
    #[serde(rename = "claim_rewards_requested")]
    ClaimRewardsRequested,
    #[serde(rename = "claim_rewards_inprogress")]
    ClaimRewardsInprogress,
    #[serde(rename = "claim_rewards_done")]
    ClaimRewardsDone,
    #[serde(rename = "pending")]
    Pending,
    #[serde(rename = "pending_queued")]
    PendingQueued,
    #[serde(rename = "active_offline")]
    ActiveOffline,
    #[serde(rename = "active_online")]
    ActiveOnline,
    #[serde(rename = "exiting_online")]
    ExitingOnline,
    #[serde(rename = "exited")]
    Exited,
    #[serde(rename = "active")]
    Active,
    #[serde(rename = "inactive")]
    Inactive,
    #[serde(rename = "activating")]
    Activating,
    #[serde(rename = "deactivating")]
    Deactivating,
}

impl std::fmt::Display for RelatedRequestStatusType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Error => write!(f, "error"),
            Self::Created => write!(f, "created"),
            Self::Canceled => write!(f, "canceled"),
            Self::ActivateRequested => write!(f, "activate_requested"),
            Self::ApproveInprogress => write!(f, "approve_inprogress"),
            Self::ApproveInprogressSigned => write!(f, "approve_inprogress_signed"),
            Self::ActivateInprogress => write!(f, "activate_inprogress"),
            Self::ActivateInprogressSigned => write!(f, "activate_inprogress_signed"),
            Self::ActivateInprogressConfirmed => write!(f, "activate_inprogress_confirmed"),
            Self::ActivateDone => write!(f, "activate_done"),
            Self::DeactivateRequested => write!(f, "deactivate_requested"),
            Self::DeactivateInprogress => write!(f, "deactivate_inprogress"),
            Self::DeactivateInprogressSigned => write!(f, "deactivate_inprogress_signed"),
            Self::DeactivateInprogressConfirmed => write!(f, "deactivate_inprogress_confirmed"),
            Self::DeactivateDone => write!(f, "deactivate_done"),
            Self::WithdrawInprogress => write!(f, "withdraw_inprogress"),
            Self::WithdrawRequested => write!(f, "withdraw_requested"),
            Self::WithdrawInprogressConfirmed => write!(f, "withdraw_inprogress_confirmed"),
            Self::WithdrawDone => write!(f, "withdraw_done"),
            Self::ClaimRewardsRequested => write!(f, "claim_rewards_requested"),
            Self::ClaimRewardsInprogress => write!(f, "claim_rewards_inprogress"),
            Self::ClaimRewardsDone => write!(f, "claim_rewards_done"),
            Self::Pending => write!(f, "pending"),
            Self::PendingQueued => write!(f, "pending_queued"),
            Self::ActiveOffline => write!(f, "active_offline"),
            Self::ActiveOnline => write!(f, "active_online"),
            Self::ExitingOnline => write!(f, "exiting_online"),
            Self::Exited => write!(f, "exited"),
            Self::Active => write!(f, "active"),
            Self::Inactive => write!(f, "inactive"),
            Self::Activating => write!(f, "activating"),
            Self::Deactivating => write!(f, "deactivating"),
        }
    }
}

impl Default for RelatedRequestStatusType {
    fn default() -> RelatedRequestStatusType {
        Self::Error
    }
}
