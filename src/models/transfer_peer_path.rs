/*
 * Fireblocks API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.5
 * Contact: support@fireblocks.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TransferPeerPath {
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "subType", skip_serializing_if = "Option::is_none")]
    pub sub_type: Option<SubType>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "walletId", skip_serializing_if = "Option::is_none")]
    pub wallet_id: Option<uuid::Uuid>,
}

impl TransferPeerPath {
    pub fn new(r#type: Type) -> TransferPeerPath {
        TransferPeerPath {
            r#type,
            sub_type: None,
            id: None,
            name: None,
            wallet_id: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "VAULT_ACCOUNT")]
    VaultAccount,
    #[serde(rename = "EXCHANGE_ACCOUNT")]
    ExchangeAccount,
    #[serde(rename = "INTERNAL_WALLET")]
    InternalWallet,
    #[serde(rename = "EXTERNAL_WALLET")]
    ExternalWallet,
    #[serde(rename = "NETWORK_CONNECTION")]
    NetworkConnection,
    #[serde(rename = "FIAT_ACCOUNT")]
    FiatAccount,
    #[serde(rename = "COMPOUND")]
    Compound,
    #[serde(rename = "GAS_STATION")]
    GasStation,
    #[serde(rename = "ONE_TIME_ADDRESS")]
    OneTimeAddress,
    #[serde(rename = "UNKNOWN")]
    Unknown,
    #[serde(rename = "END_USER_WALLET")]
    EndUserWallet,
}

impl Default for Type {
    fn default() -> Type {
        Self::VaultAccount
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SubType {
    #[serde(rename = "BINANCE")]
    Binance,
    #[serde(rename = "BINANCEUS")]
    Binanceus,
    #[serde(rename = "BITFINEX")]
    Bitfinex,
    #[serde(rename = "BITHUMB")]
    Bithumb,
    #[serde(rename = "BITMEX")]
    Bitmex,
    #[serde(rename = "BITSO")]
    Bitso,
    #[serde(rename = "BITSTAMP")]
    Bitstamp,
    #[serde(rename = "BITTREX")]
    Bittrex,
    #[serde(rename = "BLINC")]
    Blinc,
    #[serde(rename = "BYBIT")]
    Bybit,
    #[serde(rename = "CIRCLE")]
    Circle,
    #[serde(rename = "COINBASEEXCHANGE")]
    Coinbaseexchange,
    #[serde(rename = "COINBASEPRO")]
    Coinbasepro,
    #[serde(rename = "COINMETRO")]
    Coinmetro,
    #[serde(rename = "COINSPRO")]
    Coinspro,
    #[serde(rename = "CRYPTOCOM")]
    Cryptocom,
    #[serde(rename = "DERIBIT")]
    Deribit,
    #[serde(rename = "GEMINI")]
    Gemini,
    #[serde(rename = "HITBTC")]
    Hitbtc,
    #[serde(rename = "HUOBI")]
    Huobi,
    #[serde(rename = "INDEPENDENTRESERVE")]
    Independentreserve,
    #[serde(rename = "KORBIT")]
    Korbit,
    #[serde(rename = "KRAKEN")]
    Kraken,
    #[serde(rename = "KRAKENINTL")]
    Krakenintl,
    #[serde(rename = "KUCOIN")]
    Kucoin,
    #[serde(rename = "LIQUID")]
    Liquid,
    #[serde(rename = "OKCOIN")]
    Okcoin,
    #[serde(rename = "OKEX")]
    Okex,
    #[serde(rename = "PAXOS")]
    Paxos,
    #[serde(rename = "POLONIEX")]
    Poloniex,
    #[serde(rename = "External")]
    External,
    #[serde(rename = "Internal")]
    Internal,
}

impl Default for SubType {
    fn default() -> SubType {
        Self::Binance
    }
}

