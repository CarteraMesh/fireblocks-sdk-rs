// Fireblocks API
//
// Fireblocks provides a suite of applications to manage digital asset operations and a complete development platform to build your business on the blockchain.  - Visit our website for more information: [Fireblocks Website](https://fireblocks.com) - Visit our developer docs: [Fireblocks DevPortal](https://developers.fireblocks.com)
//
// The version of the OpenAPI document: 1.8.0
// Contact: developers@fireblocks.com
// Generated by: https://openapi-generator.tech

use {
    crate::models,
    serde::{Deserialize, Serialize},
};

/// AmountInfo : The details of the requested amount to transfer.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AmountInfo {
    /// If the transfer is a withdrawal from an exchange, the actual amount that
    /// was requested to be transferred. Otherwise, the requested amount.
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<String>,
    /// The amount requested by the user.
    #[serde(rename = "requestedAmount", skip_serializing_if = "Option::is_none")]
    pub requested_amount: Option<String>,
    /// The net amount of the transaction, after fee deduction.
    #[serde(rename = "netAmount", skip_serializing_if = "Option::is_none")]
    pub net_amount: Option<String>,
    /// The USD value of the requested amount.
    #[serde(rename = "amountUSD", skip_serializing_if = "Option::is_none")]
    pub amount_usd: Option<String>,
}

impl AmountInfo {
    /// The details of the requested amount to transfer.
    pub fn new() -> AmountInfo {
        AmountInfo {
            amount: None,
            requested_amount: None,
            net_amount: None,
            amount_usd: None,
        }
    }
}
