// Fireblocks API
//
// Fireblocks provides a suite of applications to manage digital asset operations and a complete development platform to build your business on the blockchain.  - Visit our website for more information: [Fireblocks Website](https://fireblocks.com) - Visit our developer docs: [Fireblocks DevPortal](https://developers.fireblocks.com)
//
// The version of the OpenAPI document: 1.8.0
// Contact: developers@fireblocks.com
// Generated by: https://openapi-generator.tech

use {
    crate::models,
    serde::{Deserialize, Serialize},
};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ConversionConfigOperation {
    /// Operation unique identifier
    #[serde(rename = "operationId")]
    pub operation_id: String,
    #[serde(rename = "type")]
    pub r#type: models::ConversionOperationType,
    #[serde(rename = "params")]
    pub params: models::ConversionOperationConfigParams,
    #[serde(rename = "status")]
    pub status: models::ConfigOperationStatus,
    #[serde(rename = "validationFailure", skip_serializing_if = "Option::is_none")]
    pub validation_failure: Option<models::ConversionValidationFailure>,
}

impl ConversionConfigOperation {
    pub fn new(
        operation_id: String,
        r#type: models::ConversionOperationType,
        params: models::ConversionOperationConfigParams,
        status: models::ConfigOperationStatus,
    ) -> ConversionConfigOperation {
        ConversionConfigOperation {
            operation_id,
            r#type,
            params,
            status,
            validation_failure: None,
        }
    }
}
