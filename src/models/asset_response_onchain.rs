/*
 * Fireblocks API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.5
 * Contact: support@fireblocks.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AssetResponseOnchain {
    /// The asset symbol
    #[serde(rename = "symbol")]
    pub symbol: String,
    /// The asset name
    #[serde(rename = "name")]
    pub name: String,
    /// The asset address
    #[serde(rename = "address", skip_serializing_if = "Option::is_none")]
    pub address: Option<String>,
    /// Number of decimals
    #[serde(rename = "decimals")]
    pub decimals: f64,
    /// The asset standard
    #[serde(rename = "standard", skip_serializing_if = "Option::is_none")]
    pub standard: Option<String>,
}

impl AssetResponseOnchain {
    pub fn new(symbol: String, name: String, decimals: f64) -> AssetResponseOnchain {
        AssetResponseOnchain {
            symbol,
            name,
            address: None,
            decimals,
            standard: None,
        }
    }
}

