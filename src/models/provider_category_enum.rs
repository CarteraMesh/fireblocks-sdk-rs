// Fireblocks API
//
// Fireblocks provides a suite of applications to manage digital asset operations and a complete development platform to build your business on the blockchain.  - Visit our website for more information: [Fireblocks Website](https://fireblocks.com) - Visit our developer docs: [Fireblocks DevPortal](https://developers.fireblocks.com)
//
// The version of the OpenAPI document: 1.8.0
// Contact: developers@fireblocks.com
// Generated by: https://openapi-generator.tech

use {
    crate::models,
    serde::{Deserialize, Serialize},
};

/// ProviderCategoryEnum : Category that classify the provider, Supported
/// categories are:  `DEX`, `CEX`, `OTC` Category that classify the provider,
/// Supported categories are:  `DEX`, `CEX`, `OTC`
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ProviderCategoryEnum {
    #[serde(rename = "DEX")]
    Dex,
    #[serde(rename = "CEX")]
    Cex,
    #[serde(rename = "OTC")]
    Otc,
    #[serde(rename = "WRAP_UNWRAP")]
    WrapUnwrap,
}

impl std::fmt::Display for ProviderCategoryEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Dex => write!(f, "DEX"),
            Self::Cex => write!(f, "CEX"),
            Self::Otc => write!(f, "OTC"),
            Self::WrapUnwrap => write!(f, "WRAP_UNWRAP"),
        }
    }
}

impl Default for ProviderCategoryEnum {
    fn default() -> ProviderCategoryEnum {
        Self::Dex
    }
}
