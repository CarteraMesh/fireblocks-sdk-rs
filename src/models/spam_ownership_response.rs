/*
 * Fireblocks API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.5
 * Contact: support@fireblocks.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SpamOwnershipResponse {
    /// Token spam result
    #[serde(rename = "result")]
    pub result: bool,
    /// Source of Token's Spam status value
    #[serde(rename = "source")]
    pub source: Source,
}

impl SpamOwnershipResponse {
    pub fn new(result: bool, source: Source) -> SpamOwnershipResponse {
        SpamOwnershipResponse {
            result,
            source,
        }
    }
}
/// Source of Token's Spam status value
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Source {
    #[serde(rename = "OWNER")]
    Owner,
    #[serde(rename = "SYSTEM")]
    System,
}

impl Default for Source {
    fn default() -> Source {
        Self::Owner
    }
}

