/*
 * Fireblocks API
 *
 * Fireblocks provides a suite of applications to manage digital asset operations and a complete development platform to build your business on the blockchain.  - Visit our website for more information: [Fireblocks Website](https://fireblocks.com) - Visit our developer docs: [Fireblocks DevPortal](https://developers.fireblocks.com) 
 *
 * The version of the OpenAPI document: 1.8.0
 * Contact: developers@fireblocks.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateInternalTransferRequest {
    #[serde(rename = "asset")]
    pub asset: String,
    #[serde(rename = "amount")]
    pub amount: String,
    #[serde(rename = "sourceType")]
    pub source_type: models::TradingAccountType,
    #[serde(rename = "destType")]
    pub dest_type: models::TradingAccountType,
}

impl CreateInternalTransferRequest {
    pub fn new(asset: String, amount: String, source_type: models::TradingAccountType, dest_type: models::TradingAccountType) -> CreateInternalTransferRequest {
        CreateInternalTransferRequest {
            asset,
            amount,
            source_type,
            dest_type,
        }
    }
}

