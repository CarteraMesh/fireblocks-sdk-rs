/*
 * Fireblocks API
 *
 * Fireblocks provides a suite of applications to manage digital asset operations and a complete development platform to build your business on the blockchain.  - Visit our website for more information: [Fireblocks Website](https://fireblocks.com) - Visit our developer docs: [Fireblocks DevPortal](https://developers.fireblocks.com) 
 *
 * The version of the OpenAPI document: 1.8.0
 * Contact: developers@fireblocks.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum WorkflowConfigStatus {
    #[serde(rename = "PENDING")]
    Pending,
    #[serde(rename = "VALIDATION_IN_PROGRESS")]
    ValidationInProgress,
    #[serde(rename = "VALIDATION_FAILED")]
    ValidationFailed,
    #[serde(rename = "READY_FOR_EXECUTION")]
    ReadyForExecution,

}

impl std::fmt::Display for WorkflowConfigStatus {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Pending => write!(f, "PENDING"),
            Self::ValidationInProgress => write!(f, "VALIDATION_IN_PROGRESS"),
            Self::ValidationFailed => write!(f, "VALIDATION_FAILED"),
            Self::ReadyForExecution => write!(f, "READY_FOR_EXECUTION"),
        }
    }
}

impl Default for WorkflowConfigStatus {
    fn default() -> WorkflowConfigStatus {
        Self::Pending
    }
}

