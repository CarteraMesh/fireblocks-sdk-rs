/*
 * Fireblocks API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.5
 * Contact: support@fireblocks.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetFilterParameter {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "userId", skip_serializing_if = "Option::is_none")]
    pub user_id: Option<String>,
    #[serde(rename = "vaultAccountId", skip_serializing_if = "Option::is_none")]
    pub vault_account_id: Option<f64>,
    #[serde(rename = "connectionMethod", skip_serializing_if = "Option::is_none")]
    pub connection_method: Option<String>,
    #[serde(rename = "feeLevel", skip_serializing_if = "Option::is_none")]
    pub fee_level: Option<String>,
    #[serde(rename = "appUrl", skip_serializing_if = "Option::is_none")]
    pub app_url: Option<String>,
    #[serde(rename = "appName", skip_serializing_if = "Option::is_none")]
    pub app_name: Option<String>,
}

impl GetFilterParameter {
    pub fn new() -> GetFilterParameter {
        GetFilterParameter {
            id: None,
            user_id: None,
            vault_account_id: None,
            connection_method: None,
            fee_level: None,
            app_url: None,
            app_name: None,
        }
    }
}

