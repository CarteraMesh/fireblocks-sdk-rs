// Fireblocks API
//
// Fireblocks provides a suite of applications to manage digital asset operations and a complete development platform to build your business on the blockchain.  - Visit our website for more information: [Fireblocks Website](https://fireblocks.com) - Visit our developer docs: [Fireblocks DevPortal](https://developers.fireblocks.com)
//
// The version of the OpenAPI document: 1.8.0
// Contact: developers@fireblocks.com
// Generated by: https://openapi-generator.tech

use {
    crate::models,
    serde::{Deserialize, Serialize},
};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TxLog {
    /// The log address
    #[serde(rename = "address")]
    pub address: String,
    /// Array of log topics
    #[serde(rename = "topics")]
    pub topics: Vec<String>,
    /// The log data
    #[serde(rename = "data")]
    pub data: String,
    /// Block number where the log occurred
    #[serde(rename = "blockNumber")]
    pub block_number: i32,
    /// Transaction hash associated with the log
    #[serde(rename = "transactionHash")]
    pub transaction_hash: String,
    /// Transaction index in the block
    #[serde(rename = "transactionIndex")]
    pub transaction_index: i32,
    /// The hash of the block
    #[serde(rename = "blockHash")]
    pub block_hash: String,
    /// Log index in the block
    #[serde(rename = "logIndex")]
    pub log_index: i32,
    /// Indicates if the log was removed
    #[serde(rename = "removed")]
    pub removed: bool,
}

impl TxLog {
    pub fn new(
        address: String,
        topics: Vec<String>,
        data: String,
        block_number: i32,
        transaction_hash: String,
        transaction_index: i32,
        block_hash: String,
        log_index: i32,
        removed: bool,
    ) -> TxLog {
        TxLog {
            address,
            topics,
            data,
            block_number,
            transaction_hash,
            transaction_index,
            block_hash,
            log_index,
            removed,
        }
    }
}
