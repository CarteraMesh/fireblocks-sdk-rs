/*
 * Fireblocks API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.5
 * Contact: support@fireblocks.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TravelRuleValidateFullTransactionRequest {
    /// The asset involved in the transaction
    #[serde(rename = "transactionAsset")]
    pub transaction_asset: String,
    /// The amount of the transaction
    #[serde(rename = "transactionAmount")]
    pub transaction_amount: String,
    /// The DID of the transaction originator
    #[serde(rename = "originatorDid")]
    pub originator_did: String,
    /// The DID of the transaction beneficiary
    #[serde(rename = "beneficiaryDid")]
    pub beneficiary_did: String,
    /// The VASP ID of the transaction originator
    #[serde(rename = "originatorVASPdid")]
    pub originator_vas_pdid: String,
    /// The VASP ID of the transaction beneficiary
    #[serde(rename = "beneficiaryVASPdid")]
    pub beneficiary_vas_pdid: String,
    /// The name of the VASP acting as the beneficiary
    #[serde(rename = "beneficiaryVASPname")]
    pub beneficiary_vas_pname: String,
    /// Information about the blockchain transaction
    #[serde(rename = "transactionBlockchainInfo")]
    pub transaction_blockchain_info: models::TravelRuleTransactionBlockchainInfo,
    /// Information about the originator of the transaction
    #[serde(rename = "originator")]
    pub originator: models::TravelRulePiiIvms,
    /// Information about the beneficiary of the transaction
    #[serde(rename = "beneficiary")]
    pub beneficiary: models::TravelRulePiiIvms,
    /// Encrypted data related to the transaction
    #[serde(rename = "encrypted")]
    pub encrypted: String,
    /// The protocol used to perform the travel rule
    #[serde(rename = "protocol")]
    pub protocol: String,
    /// The email address where a notification should be sent upon completion of the travel rule
    #[serde(rename = "notificationEmail")]
    pub notification_email: String,
    /// Whether to skip validation of beneficiary data
    #[serde(rename = "skipBeneficiaryDataValidation")]
    pub skip_beneficiary_data_validation: bool,
    /// Whether to check if the transaction is a TRAVEL_RULE in the beneficiary VASP's jurisdiction
    #[serde(rename = "travelRuleBehavior")]
    pub travel_rule_behavior: bool,
    /// Ownership proof related to the originator of the transaction
    #[serde(rename = "originatorProof")]
    pub originator_proof: models::TravelRuleOwnershipProof,
    /// Ownership proof related to the beneficiary of the transaction
    #[serde(rename = "beneficiaryProof")]
    pub beneficiary_proof: models::TravelRuleOwnershipProof,
    /// Personal identifiable information related to the transaction
    #[serde(rename = "pii")]
    pub pii: models::TravelRulePiiIvms,
}

impl TravelRuleValidateFullTransactionRequest {
    pub fn new(transaction_asset: String, transaction_amount: String, originator_did: String, beneficiary_did: String, originator_vas_pdid: String, beneficiary_vas_pdid: String, beneficiary_vas_pname: String, transaction_blockchain_info: models::TravelRuleTransactionBlockchainInfo, originator: models::TravelRulePiiIvms, beneficiary: models::TravelRulePiiIvms, encrypted: String, protocol: String, notification_email: String, skip_beneficiary_data_validation: bool, travel_rule_behavior: bool, originator_proof: models::TravelRuleOwnershipProof, beneficiary_proof: models::TravelRuleOwnershipProof, pii: models::TravelRulePiiIvms) -> TravelRuleValidateFullTransactionRequest {
        TravelRuleValidateFullTransactionRequest {
            transaction_asset,
            transaction_amount,
            originator_did,
            beneficiary_did,
            originator_vas_pdid,
            beneficiary_vas_pdid,
            beneficiary_vas_pname,
            transaction_blockchain_info,
            originator,
            beneficiary,
            encrypted,
            protocol,
            notification_email,
            skip_beneficiary_data_validation,
            travel_rule_behavior,
            originator_proof,
            beneficiary_proof,
            pii,
        }
    }
}

