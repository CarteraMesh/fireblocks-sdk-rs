/*
 * Fireblocks API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.5
 * Contact: support@fireblocks.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NetworkConnection {
    /// The network ID of the profile trying to create the connection.
    #[serde(rename = "localNetworkId")]
    pub local_network_id: String,
    /// The network ID the profile is attempting to connect to.
    #[serde(rename = "remoteNetworkId")]
    pub remote_network_id: String,
    #[serde(rename = "routingPolicy", skip_serializing_if = "Option::is_none")]
    pub routing_policy: Option<models::NetworkConnectionRoutingPolicy>,
}

impl NetworkConnection {
    pub fn new(local_network_id: String, remote_network_id: String) -> NetworkConnection {
        NetworkConnection {
            local_network_id,
            remote_network_id,
            routing_policy: None,
        }
    }
}

