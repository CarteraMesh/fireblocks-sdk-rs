/*
 * Fireblocks API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.5
 * Contact: support@fireblocks.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PolicyRuleError : Rule validation result error
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PolicyRuleError {
    /// Error message
    #[serde(rename = "errorMessage")]
    pub error_message: String,
    /// error code
    #[serde(rename = "errorCode")]
    pub error_code: f64,
    /// error code name
    #[serde(rename = "errorCodeName")]
    pub error_code_name: String,
    /// The field which the error relates to * operator - transaction initiator * operators - transaction initiators * authorizationGroups - transaction authorizer groups * designatedSigner - transaction signer * designatedSigners - transaction signers * contractMethods - contract methods * amountAggregation - transaction amount aggregation configuration * src - transaction source asset configuration * dst - transaction destination asset configuration 
    #[serde(rename = "errorField")]
    pub error_field: ErrorField,
}

impl PolicyRuleError {
    /// Rule validation result error
    pub fn new(error_message: String, error_code: f64, error_code_name: String, error_field: ErrorField) -> PolicyRuleError {
        PolicyRuleError {
            error_message,
            error_code,
            error_code_name,
            error_field,
        }
    }
}
/// The field which the error relates to * operator - transaction initiator * operators - transaction initiators * authorizationGroups - transaction authorizer groups * designatedSigner - transaction signer * designatedSigners - transaction signers * contractMethods - contract methods * amountAggregation - transaction amount aggregation configuration * src - transaction source asset configuration * dst - transaction destination asset configuration 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ErrorField {
    #[serde(rename = "operator")]
    Operator,
    #[serde(rename = "operators")]
    Operators,
    #[serde(rename = "authorizationGroups")]
    AuthorizationGroups,
    #[serde(rename = "designatedSigner")]
    DesignatedSigner,
    #[serde(rename = "designatedSigners")]
    DesignatedSigners,
    #[serde(rename = "contractMethods")]
    ContractMethods,
    #[serde(rename = "amountAggregation")]
    AmountAggregation,
    #[serde(rename = "src")]
    Src,
    #[serde(rename = "dst")]
    Dst,
}

impl Default for ErrorField {
    fn default() -> ErrorField {
        Self::Operator
    }
}

