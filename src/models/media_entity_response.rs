/*
 * Fireblocks API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.5
 * Contact: support@fireblocks.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MediaEntityResponse {
    /// Cached accessible URL
    #[serde(rename = "url")]
    pub url: String,
    /// Media type
    #[serde(rename = "contentType")]
    pub content_type: ContentType,
}

impl MediaEntityResponse {
    pub fn new(url: String, content_type: ContentType) -> MediaEntityResponse {
        MediaEntityResponse {
            url,
            content_type,
        }
    }
}
/// Media type
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ContentType {
    #[serde(rename = "IMAGE")]
    Image,
    #[serde(rename = "VIDEO")]
    Video,
    #[serde(rename = "ANIMATION")]
    Animation,
    #[serde(rename = "THREE_D")]
    ThreeD,
    #[serde(rename = "TEXT")]
    Text,
    #[serde(rename = "GIF")]
    Gif,
    #[serde(rename = "UNKNOWN_TYPE")]
    UnknownType,
    #[serde(rename = "SVG")]
    Svg,
    #[serde(rename = "AUDIO")]
    Audio,
}

impl Default for ContentType {
    fn default() -> ContentType {
        Self::Image
    }
}

