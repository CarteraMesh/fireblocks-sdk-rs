/*
 * Fireblocks API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.5
 * Contact: support@fireblocks.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CustomFiatRoutingDest {
    /// The network routing logic.
    #[serde(rename = "scheme")]
    pub scheme: Scheme,
    /// The fiat account the funds are being sent to.
    #[serde(rename = "dstType")]
    pub dst_type: DstType,
    /// The ID of the fiat account the funds are being sent to.
    #[serde(rename = "dstId")]
    pub dst_id: String,
}

impl CustomFiatRoutingDest {
    pub fn new(scheme: Scheme, dst_type: DstType, dst_id: String) -> CustomFiatRoutingDest {
        CustomFiatRoutingDest {
            scheme,
            dst_type,
            dst_id,
        }
    }
}
/// The network routing logic.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Scheme {
    #[serde(rename = "CUSTOM")]
    Custom,
}

impl Default for Scheme {
    fn default() -> Scheme {
        Self::Custom
    }
}
/// The fiat account the funds are being sent to.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum DstType {
    #[serde(rename = "FIAT_ACCOUNT")]
    FiatAccount,
}

impl Default for DstType {
    fn default() -> DstType {
        Self::FiatAccount
    }
}

