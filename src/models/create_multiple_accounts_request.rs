// Fireblocks API
//
// Fireblocks provides a suite of applications to manage digital asset operations and a complete development platform to build your business on the blockchain.  - Visit our website for more information: [Fireblocks Website](https://fireblocks.com) - Visit our developer docs: [Fireblocks DevPortal](https://developers.fireblocks.com)
//
// The version of the OpenAPI document: 1.8.0
// Contact: developers@fireblocks.com
// Generated by: https://openapi-generator.tech

use {
    crate::models,
    serde::{Deserialize, Serialize},
};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateMultipleAccountsRequest {
    /// Count
    #[serde(rename = "count")]
    pub count: i32,
    /// Array of asset IDs
    #[serde(rename = "baseAssetIds")]
    pub base_asset_ids: Vec<String>,
    /// Names to assign to vault accounts. if vaultAccountNamesStartingIndex or
    /// prefix is used it'll fail
    #[serde(rename = "names", skip_serializing_if = "Option::is_none")]
    pub names: Option<Vec<String>>,
    /// Copy vault accounts names starting from this index. If names array is
    /// used it'll fail
    #[serde(
        rename = "vaultAccountNamesStartingIndex",
        skip_serializing_if = "Option::is_none"
    )]
    pub vault_account_names_starting_index: Option<i32>,
    /// When copying from existing vault accounts
    /// (vaultAccountNamesStartingIndex) then adding a prefix to the names. If
    /// names array is used it'll fail
    #[serde(rename = "prefix", skip_serializing_if = "Option::is_none")]
    pub prefix: Option<String>,
}

impl CreateMultipleAccountsRequest {
    pub fn new(count: i32, base_asset_ids: Vec<String>) -> CreateMultipleAccountsRequest {
        CreateMultipleAccountsRequest {
            count,
            base_asset_ids,
            names: None,
            vault_account_names_starting_index: None,
            prefix: None,
        }
    }
}
