/*
 * Fireblocks API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.5
 * Contact: support@fireblocks.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateConnectionRequest {
    /// The ID of the vault to create a dApp.
    #[serde(rename = "vaultAccountId")]
    pub vault_account_id: f64,
    /// The default fee level. Valid values are `MEDIUM` and `HIGH`.
    #[serde(rename = "feeLevel")]
    pub fee_level: FeeLevel,
    /// The WalletConnect uri provided by the dApp.
    #[serde(rename = "uri")]
    pub uri: String,
    /// The IDs of the blockchain networks used in the dApp connection.
    #[serde(rename = "chainIds", skip_serializing_if = "Option::is_none")]
    pub chain_ids: Option<Vec<String>>,
}

impl CreateConnectionRequest {
    pub fn new(vault_account_id: f64, fee_level: FeeLevel, uri: String) -> CreateConnectionRequest {
        CreateConnectionRequest {
            vault_account_id,
            fee_level,
            uri,
            chain_ids: None,
        }
    }
}
/// The default fee level. Valid values are `MEDIUM` and `HIGH`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FeeLevel {
    #[serde(rename = "MEDIUM")]
    Medium,
    #[serde(rename = "HIGH")]
    High,
}

impl Default for FeeLevel {
    fn default() -> FeeLevel {
        Self::Medium
    }
}

