// Fireblocks API
//
// Fireblocks provides a suite of applications to manage digital asset operations and a complete development platform to build your business on the blockchain.  - Visit our website for more information: [Fireblocks Website](https://fireblocks.com) - Visit our developer docs: [Fireblocks DevPortal](https://developers.fireblocks.com)
//
// The version of the OpenAPI document: 1.8.0
// Contact: developers@fireblocks.com
// Generated by: https://openapi-generator.tech

use {
    crate::models,
    serde::{Deserialize, Serialize},
};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct VaultAccount {
    /// Vault Account unique identifier
    #[serde(rename = "id")]
    pub id: String,
    /// Vault Account name
    #[serde(rename = "name")]
    pub name: String,
    /// An array of vault assets
    #[serde(rename = "assets")]
    pub assets: Vec<models::VaultAsset>,
    /// Whether the Vault Account is visible in the UI or not
    #[serde(rename = "hiddenOnUI")]
    pub hidden_on_ui: bool,
    /// Customer reference ID for AML integrations
    #[serde(rename = "customerRefId", skip_serializing_if = "Option::is_none")]
    pub customer_ref_id: Option<String>,
    /// Whether the Vault Account is monitored by the Fireblocks Gas Station or
    /// not
    #[serde(rename = "autoFuel", skip_serializing_if = "Option::is_none")]
    pub auto_fuel: Option<bool>,
}

impl VaultAccount {
    pub fn new(
        id: String,
        name: String,
        assets: Vec<models::VaultAsset>,
        hidden_on_ui: bool,
    ) -> VaultAccount {
        VaultAccount {
            id,
            name,
            assets,
            hidden_on_ui,
            customer_ref_id: None,
            auto_fuel: None,
        }
    }
}
