/*
 * Fireblocks API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.5
 * Contact: support@fireblocks.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PayoutInstructionResponse {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "payeeAccount")]
    pub payee_account: models::PayeeAccountResponse,
    #[serde(rename = "amount")]
    pub amount: models::InstructionAmount,
    #[serde(rename = "state")]
    pub state: models::PayoutInstructionState,
    #[serde(rename = "transactions")]
    pub transactions: Vec<models::Transaction>,
}

impl PayoutInstructionResponse {
    pub fn new(payee_account: models::PayeeAccountResponse, amount: models::InstructionAmount, state: models::PayoutInstructionState, transactions: Vec<models::Transaction>) -> PayoutInstructionResponse {
        PayoutInstructionResponse {
            id: None,
            payee_account,
            amount,
            state,
            transactions,
        }
    }
}

