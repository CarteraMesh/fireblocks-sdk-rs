/*
 * Fireblocks API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.5
 * Contact: support@fireblocks.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NetworkConnectionRoutingPolicy {
    #[serde(rename = "crypto", skip_serializing_if = "Option::is_none")]
    pub crypto: Option<models::NetworkConnectionRoutingPolicyCrypto>,
    #[serde(rename = "sen", skip_serializing_if = "Option::is_none")]
    pub sen: Option<models::NetworkConnectionRoutingPolicySen>,
    #[serde(rename = "signet", skip_serializing_if = "Option::is_none")]
    pub signet: Option<models::NetworkConnectionRoutingPolicySignet>,
    #[serde(rename = "sen_test", skip_serializing_if = "Option::is_none")]
    pub sen_test: Option<models::NetworkConnectionRoutingPolicySenTest>,
    #[serde(rename = "signet_test", skip_serializing_if = "Option::is_none")]
    pub signet_test: Option<models::NetworkConnectionRoutingPolicySignetTest>,
}

impl NetworkConnectionRoutingPolicy {
    pub fn new() -> NetworkConnectionRoutingPolicy {
        NetworkConnectionRoutingPolicy {
            crypto: None,
            sen: None,
            signet: None,
            sen_test: None,
            signet_test: None,
        }
    }
}

