/*
 * Fireblocks API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.5
 * Contact: support@fireblocks.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// TransactionResponseContractCallDecodedData : Decoded data for `CONTRACT_CALL` operations. The Fireblocks [development libraries](https://developers.fireblocks.com/docs/ethereum-development#convenience-libraries) are recommended for setting this parameter's value.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TransactionResponseContractCallDecodedData {
    #[serde(rename = "contractName", skip_serializing_if = "Option::is_none")]
    pub contract_name: Option<String>,
    #[serde(rename = "functionCalls", skip_serializing_if = "Option::is_none")]
    pub function_calls: Option<Vec<serde_json::Value>>,
}

impl TransactionResponseContractCallDecodedData {
    /// Decoded data for `CONTRACT_CALL` operations. The Fireblocks [development libraries](https://developers.fireblocks.com/docs/ethereum-development#convenience-libraries) are recommended for setting this parameter's value.
    pub fn new() -> TransactionResponseContractCallDecodedData {
        TransactionResponseContractCallDecodedData {
            contract_name: None,
            function_calls: None,
        }
    }
}

