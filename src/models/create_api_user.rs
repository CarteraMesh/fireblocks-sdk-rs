/*
 * Fireblocks API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.5
 * Contact: support@fireblocks.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateApiUser {
    /// User role
    #[serde(rename = "role")]
    pub role: String,
    /// users name
    #[serde(rename = "name")]
    pub name: String,
    /// only for user with signing capabilities
    #[serde(rename = "csrPem", skip_serializing_if = "Option::is_none")]
    pub csr_pem: Option<String>,
    /// cosigner setup type
    #[serde(rename = "coSignerSetupType", skip_serializing_if = "Option::is_none")]
    pub co_signer_setup_type: Option<String>,
    /// is first?
    #[serde(rename = "coSignerSetupIsFirstUser", skip_serializing_if = "Option::is_none")]
    pub co_signer_setup_is_first_user: Option<bool>,
}

impl CreateApiUser {
    pub fn new(role: String, name: String) -> CreateApiUser {
        CreateApiUser {
            role,
            name,
            csr_pem: None,
            co_signer_setup_type: None,
            co_signer_setup_is_first_user: None,
        }
    }
}

