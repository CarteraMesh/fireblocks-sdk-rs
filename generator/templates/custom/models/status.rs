/*
 * Fireblocks API
 *
 * Fireblocks provides a suite of applications to manage digital asset operations and a complete development platform to build your business on the blockchain.  - Visit our website for more information: [Fireblocks Website](https://fireblocks.com) - Visit our developer docs: [Fireblocks DevPortal](https://developers.fireblocks.com)
 *
 * The version of the OpenAPI document: 1.8.0
 * Contact: developers@fireblocks.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Status {
    /// The status of the command
    #[serde(rename = "status")]
    pub status: Status,
    /// The type of the command
    #[serde(rename = "type")]
    pub r#type: Type,
}

impl Status {
    pub fn new(status: Status, r#type: Type) -> Status {
        Status { status, r#type }
    }
}
/// The status of the command
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "WAITING_FOR_APPROVAL")]
    WaitingForApproval,
    #[serde(rename = "APPROVED")]
    Approved,
    #[serde(rename = "CANCELLED")]
    Cancelled,
    #[serde(rename = "REJECTED")]
    Rejected,
    #[serde(rename = "COMPLETED")]
    Completed,
}

impl Default for Status {
    fn default() -> Status {
        Self::WaitingForApproval
    }
}
/// The type of the command
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "PAIR_API_KEY")]
    PairApiKey,
    #[serde(rename = "UPDATE_CALLBACK_HANDLER")]
    UpdateCallbackHandler,
    #[serde(rename = "UNPAIR_API_KEY")]
    UnpairApiKey,
}

impl Default for Type {
    fn default() -> Type {
        Self::PairApiKey
    }
}
